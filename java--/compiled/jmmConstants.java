/* Generated By:JJTree&JavaCC: Do not edit this line. jmmConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface jmmConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int AND_OP = 5;
  /** RegularExpression Id. */
  int LT_OP = 6;
  /** RegularExpression Id. */
  int PLUS_OP = 7;
  /** RegularExpression Id. */
  int MINUS_OP = 8;
  /** RegularExpression Id. */
  int TIMES_OP = 9;
  /** RegularExpression Id. */
  int DIVIDE_OP = 10;
  /** RegularExpression Id. */
  int NOT_OP = 11;
  /** RegularExpression Id. */
  int WHILE = 12;
  /** RegularExpression Id. */
  int IF = 13;
  /** RegularExpression Id. */
  int ELSE = 14;
  /** RegularExpression Id. */
  int ASSIGN = 15;
  /** RegularExpression Id. */
  int LPAR = 16;
  /** RegularExpression Id. */
  int RPAR = 17;
  /** RegularExpression Id. */
  int DOT = 18;
  /** RegularExpression Id. */
  int LENGTH = 19;
  /** RegularExpression Id. */
  int VIRG = 20;
  /** RegularExpression Id. */
  int PVIRG = 21;
  /** RegularExpression Id. */
  int LCHAVETA = 22;
  /** RegularExpression Id. */
  int RCHAVETA = 23;
  /** RegularExpression Id. */
  int LPARRETO = 24;
  /** RegularExpression Id. */
  int RPARRETO = 25;
  /** RegularExpression Id. */
  int EXTENDS = 26;
  /** RegularExpression Id. */
  int CLASS = 27;
  /** RegularExpression Id. */
  int PUBLIC = 28;
  /** RegularExpression Id. */
  int STATIC = 29;
  /** RegularExpression Id. */
  int VOID = 30;
  /** RegularExpression Id. */
  int MAIN = 31;
  /** RegularExpression Id. */
  int INT = 32;
  /** RegularExpression Id. */
  int INT_ARRAY = 33;
  /** RegularExpression Id. */
  int BOOLEAN = 34;
  /** RegularExpression Id. */
  int TRUE = 35;
  /** RegularExpression Id. */
  int FALSE = 36;
  /** RegularExpression Id. */
  int RETURN = 37;
  /** RegularExpression Id. */
  int THIS = 38;
  /** RegularExpression Id. */
  int NEW = 39;
  /** RegularExpression Id. */
  int STRING = 40;
  /** RegularExpression Id. */
  int INTEGER = 41;
  /** RegularExpression Id. */
  int IDENTIFIER = 42;
  /** RegularExpression Id. */
  int LETTER = 43;
  /** RegularExpression Id. */
  int DIGIT = 44;
  /** RegularExpression Id. */
  int ALPHANUM = 45;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"&&\"",
    "\"<\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"!\"",
    "\"while\"",
    "\"if\"",
    "\"else\"",
    "\"=\"",
    "\"(\"",
    "\")\"",
    "\".\"",
    "\"length\"",
    "\",\"",
    "\";\"",
    "\"{\"",
    "\"}\"",
    "\"[\"",
    "\"]\"",
    "\"extends\"",
    "\"class\"",
    "\"public\"",
    "\"static\"",
    "\"void\"",
    "\"main\"",
    "\"int\"",
    "\"int[]\"",
    "\"boolean\"",
    "\"true\"",
    "\"false\"",
    "\"return\"",
    "\"this\"",
    "\"new\"",
    "\"String\"",
    "<INTEGER>",
    "<IDENTIFIER>",
    "<LETTER>",
    "<DIGIT>",
    "<ALPHANUM>",
  };

}
